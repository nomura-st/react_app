/**
 * Generated by orval v6.12.1 🍺
 * Do not edit manually.
 * REST API仕様
 * BackEndのREST API仕様です
 * OpenAPI spec version: 1.0.0
 */
import {
  rest
} from 'msw'
import {
  faker
} from '@faker-js/faker'

export const getMarkerCreateMock = () => ({id: faker.datatype.number({min: undefined, max: undefined}), datetime: faker.datatype.number({min: undefined, max: undefined}), lat: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), lng: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), alt: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([{}, undefined]), imageId: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})

export const getMarkerByIdMock = () => ({id: faker.datatype.number({min: undefined, max: undefined}), datetime: faker.datatype.number({min: undefined, max: undefined}), lat: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), lng: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), alt: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined]), comment: faker.helpers.arrayElement([{}, undefined]), imageId: faker.helpers.arrayElement([faker.datatype.number({min: undefined, max: undefined}), undefined])})

export const getRestApi仕様MSW = () => [
rest.post('*/marker/create', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getMarkerCreateMock()),
        )
      }),rest.get('*/marker/:id', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getMarkerByIdMock()),
        )
      }),]
